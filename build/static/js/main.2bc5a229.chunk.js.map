{"version":3,"sources":["Board.js","FormDialog.js","Navbar.js","index.js"],"names":["rows","sortBy","data","totalMarks","map","row","key","rollNumber","marks","parseInt","Maths","Science","English","topper","orderBy","topperRollNumber","withStyles","theme","root","width","marginTop","spacing","unit","overflowX","table","minWidth","props","classes","react_default","a","createElement","Paper_default","className","Table_default","TableHead_default","TableRow_default","TableCell_default","numeric","TableBody_default","id","component","name","FormDialog","state","open","fName","lName","class","yearOfPassing","percentageOfMarks","isSubmitButtonDisabled","formSuccess","handleClickOpen","_this","setState","handleClose","handleSubmit","handleChange","event","persist","Object","defineProperty","target","value","Button_default","variant","aria-label","color","onClick","this","Add_default","Dialog_default","onClose","aria-labelledby","DialogTitle_default","DialogContent_default","DialogContentText_default","TextField_default","autoFocus","label","type","fullWidth","onChange","bind","DialogActions_default","disabled","Snackbar_default","autoHideDuration","message","React","Component","flexGrow","grow","menuButton","marginLeft","marginRight","AppBar_default","position","Toolbar_default","IconButton_default","Menu_default","Typography_default","rootElement","document","getElementById","ReactDOM","render","Navbar","src_Board","FormDialog_FormDialog"],"mappings":"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","file":"static/js/main.2bc5a229.chunk.js","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { sortBy, orderBy } from \"lodash\";\n\nimport \"./styles.css\";\nimport data from \"./data.json\";\n\nconst styles = theme => ({\n  root: {\n    width: \"100%\",\n    marginTop: theme.spacing.unit * 3,\n    overflowX: \"auto\"\n  },\n  table: {\n    minWidth: 700\n  }\n});\n\n// Sorting the array by name key\nconst rows = sortBy(data, \"name\");\nconst totalMarks = {};\nrows.map((row, key) => {\n  totalMarks[key] = {\n    rollNumber: row.rollNumber,\n    marks:\n      parseInt(row.marks.Maths) +\n      parseInt(row.marks.Science) +\n      parseInt(row.marks.English)\n  };\n});\n\n// Creating a total marks array and sorting it in descending order\nconst topper = orderBy(totalMarks, \"marks\", [\"desc\"]);\nconst topperRollNumber = topper ? topper[0].rollNumber : null;\n\nfunction Board(props) {\n  const { classes } = props;\n  return (\n    <Paper className={classes.root}>\n      <Table className={classes.table} >\n        <TableHead className=\"THeader\">\n          <TableRow>\n            <TableCell>Name</TableCell>\n            <TableCell>Roll No.</TableCell>\n            <TableCell numeric>Maths</TableCell>\n            <TableCell numeric>English</TableCell>\n            <TableCell numeric>Science</TableCell>\n            <TableCell numeric>Total</TableCell>\n            <TableCell>Status</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {rows.map(row => {\n            return (\n              <TableRow key={row.id}>\n                <TableCell component=\"th\" className=\"Name\">\n                  {row.name}\n                </TableCell>\n                <TableCell numeric>\n                  {row.rollNumber}\n                </TableCell>\n                <TableCell numeric>\n                  {row.marks.Maths}\n                  </TableCell>\n                <TableCell numeric>\n                  {row.marks.Science}\n                </TableCell>\n                <TableCell numeric>\n                  {row.marks.English}\n                </TableCell>\n                <TableCell numeric>\n                  {parseInt(row.marks.English) +\n                    parseInt(row.marks.Science) +\n                    parseInt(row.marks.Maths)}\n                </TableCell>\n                { row.rollNumber == topperRollNumber ? \n                (<TableCell className=\"Topper\">Topper</TableCell>)\n                : parseInt(row.marks.English) >= 20 &&\n               parseInt(row.marks.Science) >= 20 &&\n               parseInt(row.marks.Maths) >= 20 ? (\n                 <TableCell>Passed</TableCell>\n               ):\n                  <TableCell className=\"Fail\">Fail</TableCell>\n                }\n              </TableRow>\n            );\n          })}\n        </TableBody>\n      </Table>\n    </Paper>\n  );\n}\n\nBoard.propTypes = {\n  classes: PropTypes.object.isRequired\n};\n\nexport default withStyles(styles)(Board);\n","import React from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport \"./styles.css\";\n\nexport default class FormDialog extends React.Component {\n  state = {\n    open: false,\n    fName: \"\",\n    lName: \"\",\n    class: \"\",\n    yearOfPassing: \"\",\n    percentageOfMarks: \"\",\n    isSubmitButtonDisabled: true,\n    formSuccess: false\n  };\n\n  handleClickOpen = () => {\n    this.setState({ open: true });\n  };\n\n  handleClose = () => {\n    this.setState({ open: false });\n  };\n\n  handleSubmit = () => {\n    // Whatever we wish to do here after form submission, we can do here.\n    // Resetting the form fields\n    this.setState({\n      fName: \"\",\n      lName: \"\",\n      class: \"\",\n      percentageOfMarks: \"\",\n      yearOfPassing: \"\",\n      formSuccess: true,\n      open: false\n    });\n  };\n\n  handleChange = (name, event) => {\n    event.persist();\n    this.setState({\n      [name]: event.target.value\n    });\n\n    // Field validations can be done here or before changing the state for particular field\n    // Field validations can be done either using regexes or through supportive validation library for material-ui\n    if (\n      this.state.fName &&\n      this.state.lName &&\n      this.state.class &&\n      this.state.yearOfPassing &&\n      this.state.percentageOfMarks\n    ) {\n      this.setState({ isSubmitButtonDisabled: false });\n    }\n  };\n\n  render() {\n    return (\n      <div>\n        <Button\n          variant=\"extendedFab\"\n          aria-label=\"Delete\"\n          color=\"primary\"\n          onClick={this.handleClickOpen}\n          className=\"dialogform\"\n        >\n          <AddIcon />\n          Fill School Form\n        </Button>\n        <Dialog\n          open={this.state.open}\n          onClose={this.handleClose}\n          aria-labelledby=\"form-dialog-title\"\n        >\n          <DialogTitle id=\"form-dialog-title\">Admission Form</DialogTitle>\n          <DialogContent>\n            <DialogContentText>\n              Please fill all the fields correctly.\n            </DialogContentText>\n            <TextField\n              autoFocus\n              id=\"fname\"\n              label=\"First Name\"\n              type=\"text\"\n              fullWidth\n              value={this.state.fName}\n              onChange={this.handleChange.bind(this, \"fName\")}\n            />\n            <TextField\n              autoFocus\n              id=\"lname\"\n              label=\"Last Name\"\n              type=\"text\"\n              fullWidth\n              value={this.state.lName}\n              onChange={this.handleChange.bind(this, \"lName\")}\n            />\n            <TextField\n              autoFocus\n              id=\"class\"\n              label=\"Class\"\n              type=\"text\"\n              fullWidth\n              value={this.state.class}\n              onChange={this.handleChange.bind(this, \"class\")}\n            />\n            <TextField\n              autoFocus\n              id=\"passingYear\"\n              label=\"Year of Passing\"\n              type=\"number\"\n              fullWidth\n              value={this.state.yearOfPassing}\n              onChange={this.handleChange.bind(this, \"yearOfPassing\")}\n            />\n            <TextField\n              autoFocus\n              id=\"percentage\"\n              label=\"Marks (%)\"\n              type=\"number\"\n              fullWidth\n              value={this.state.percentageOfMarks}\n              onChange={this.handleChange.bind(this, \"percentageOfMarks\")}\n            />\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={this.handleClose} color=\"primary\">\n              Cancel\n            </Button>\n            <Button\n              onClick={this.handleSubmit}\n              color=\"primary\"\n              disabled={this.state.isSubmitButtonDisabled}\n            >\n              Submit\n            </Button>\n          </DialogActions>\n        </Dialog>\n        <Snackbar\n          autoHideDuration={3}\n          message=\"Success! Your Application Form has been submitted\"\n          open={this.state.formSuccess}\n          className=\"toast\"\n        />\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\n\nconst styles = {\n  root: {\n    flexGrow: 1\n  },\n  grow: {\n    flexGrow: 1\n  },\n  menuButton: {\n    marginLeft: -12,\n    marginRight: 20\n  }\n};\n\nfunction NavBar(props) {\n  const { classes } = props;\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"static\">\n        <Toolbar>\n          <IconButton\n            className={classes.menuButton}\n            color=\"inherit\"\n            aria-label=\"Menu\"\n          >\n            <MenuIcon />\n          </IconButton>\n          <Typography variant=\"h6\" color=\"inherit\" className={classes.grow}>\n            SchoolBoard\n          </Typography>\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n}\n\nNavBar.propTypes = {\n  classes: PropTypes.object.isRequired\n};\n\nexport default withStyles(styles)(NavBar);\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./styles.css\";\nimport Board from \"./Board\";\nimport FormDialog from \"./FormDialog\";\nimport NavBar from \"./Navbar\";\nfunction App() {\n  return (\n    <div className=\"App\">\n      <NavBar />\n      <Board />\n      <FormDialog />\n    </div>\n  );\n}\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(<App />, rootElement);\n"],"sourceRoot":""}